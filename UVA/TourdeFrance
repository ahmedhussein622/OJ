

#include<stdio.h>
#include<math.h>

float a[100],b[100];
int i,j,m,n,l;

void merger (int x, int y, int z) {

    i = x;j = y+1,m = x;

    while ( i <=y && j <= z) {

        if(a[i] < a[j]){
            b[m] = a[i];
            m++;i++;
        }
        else {
            b[m] = a[j];
            m++;j++;
        }
    }
    while (i <= y) {
        b[m] = a[i];
        m++;i++;
    }
     while (j <= z) {
        b[m] = a[j];
        m++;j++;
    }
    for (i = x; i <= z; i++)
        a[i] = b[i];
}

void mergeSort(int first, int last) {

    if (first >= last)
        return;

    int k =  (last + first)/2;

    mergeSort(first, k);
    mergeSort(k+1, last);
    merger(first,k,last);
}



int main () {

    int f,r,fro[10],rear[10];
    float maximum;

    while (scanf("%d",&f) && f) {

        scanf("%d",&r);

        for (i = 0; i < f; i++)
            scanf("%d",&fro[i]);
        for (i = 0; i < r; i++)
            scanf("%d",&rear[i]);

        l = -1;
        for (i = 0; i < r; i++) {
            for (j = 0 ; j < f; j++) {
                l++;
                a[l] = (float)rear[i] /(float)fro[j] ;
            }
        }

        mergeSort(0,l);

        maximum = 0;
        for (i = 0; i < l; i++)
            if (a[i+1]/a[i] > maximum)
                maximum = a[i+1]/a[i];

        maximum = floor(maximum* 100 + .5) / 100 ;
        printf("%.2f\n",maximum);

    }// end of while
    return 0 ;
}


