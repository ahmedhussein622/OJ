#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>


using namespace std;


int v[1010], w[1010];
int n,t,we;
int dp[1010][1010];


int solve(int id, int s) {

    if(id == n)
        return 0;

    if(dp[id][s] != -1)
        return dp[id][s];

    dp[id][s] = solve(id+1,s);
    if(s-w[id] >= 0)
       dp[id][s] = max(dp[id][s],solve(id+1,s-w[id])+v[id]);

    return dp[id][s] ;

}

int main()
{

        int tc;
        scanf("%d",&tc);

		for(int k = 0; k < tc; k++){

            scanf("%d",&n);

			for(int i = 0; i < n; i++) {
                scanf("%d %d",v+i,w+i);

            }


            int ans = 0;
            scanf("%d",&t);
            for(int j = 0;j < t;j++) {
                int x;
                scanf("%d",&x);
                for(int i = 0; i < n; i++)
                    memset(dp[i],-1,sizeof(int)*(x+1));
                ans += solve(0, x);
            }

            printf("%d\n",ans);
        }

}




























