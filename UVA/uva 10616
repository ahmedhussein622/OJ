#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <map>
#include <vector>
#include <tuple>


using namespace std;
int m,n,q,d;
int input[500];
map<tuple<int,int,int>,int> dp;

int solve(int index, int c, int mod) {
    if(c == 0) {
        if(mod == 0)
            return 1;
        return 0;
    }

    if(n-index < c)
        return 0;

    tuple<int,int,int> a(index,c,mod);
    if(dp.find(a) != dp.end())
        return dp[a];

    int ans = solve(index+1,c,mod);
    ans += solve(index+1,c-1, (mod + input[index] % d)%d);

    dp[a] = ans;

    return ans;

}

int main()
{

    int k = 1;
    int ans;
    while(scanf("%d %d",&n,&q) && (n || q)) {

        for(int i = 0; i < n; i++) {
            scanf("%d",input+i);
        }

        printf("SET %d:\n",k++);

        for(int i = 1; i <= q; i++) {
            dp.clear();
            scanf("%d %d",&d,&m);
            ans = solve(0,m,0);
            printf("QUERY %d: %d\n",i,ans);
        }



    }




}























