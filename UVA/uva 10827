

#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <map>
#define Infinity 9999999999999

using namespace std;
int input[1020][1020];
int bb[1020];
int n;

int kadnes(int a[]) {

    int maxSum = -999999999;
    int currentSum;
    for(int i = 0; i < n;i++) {
        currentSum = 0;
        for(int j = i;j < i+n; j++) {
            currentSum += a[j];
            if(currentSum > maxSum)
                maxSum = currentSum;


            if(currentSum < 0)
                currentSum = 0;
        }
    }

    return maxSum;
}


int main() {

    int tc;
    scanf("%d",&tc);

    for(int v = 1; v <= tc; v++) {

        scanf("%d", &n);
        for(int i = 0;i < n;i ++) {
            for(int j = 0 ;j < n;j++) {
                scanf("%d",&input[i][j]);
                input[i+n][j] = input[i][j];
                input[i][j+n] = input[i][j];
                input[i+n][j+n] = input[i][j];
            }
        }

        for(int i = 1;i < 2*n;i ++) {
            for(int j = 0 ;j < 2*n;j++) {
                input[i][j] += input[i-1][j];
            }

        }


        int maxSum = -999999999;
        for(int i = 0; i < n; i++) {
            for(int j = i; j < i+n;j++) {
                if(i != 0) {
                    for(int k = 0; k < 2*n; k++) {
                        bb[k] = input[j][k] - input[i-1][k];
                    }
                    maxSum = max(maxSum, kadnes(bb));
                }
                else
                    maxSum = max(maxSum,kadnes(input[i]));

            }
        }

        printf("%d\n",maxSum);

    }

    return 0;
}




















