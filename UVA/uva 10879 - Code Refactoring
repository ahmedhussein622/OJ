import java.awt.Point;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Set;
import java.util.StringTokenizer;

import javax.swing.text.TabExpander;



public class Main {
	
	static int p[] = new int[5000];
	static ArrayList<Integer> primes = new ArrayList<Integer>();
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
		genertate();
		
		int testCases = Integer.parseInt(in.readLine());
		int k,counter,i,h,size,g,b;
		size = primes.size();
		int ccc = 1;
		ArrayList<Integer> result = new ArrayList<Integer>();
		
		while (ccc <= testCases ) {
			
			k = Integer.parseInt(in.readLine());
			result.clear();
			counter = 0;
			i = 0;
			h = k;
			b = 1;
			for(i = 0; i < size && counter != 2 && h > 0; i++) {
				g = primes.get(i);
				if(h % g == 0) {
					h /= g;
					b *= g;
					if(!result.contains(b) && !result.contains(k/b)){
						result.add(b);
						result.add(k/b);
						counter++;
					}
					i--;
				}
			
			}// end of for
			
			out.printf("Case #%d: %d = %d * %d = %d * %d\n",ccc,k,result.get(0),result.get(1)
					,result.get(2),result.get(3));
			ccc++;
		}
		
		out.flush();
	}
	
	
	
	public static void genertate() {
		
		int m = p.length;
		int i,j;
		for(i = 0; i < m; i++)
			p[i] = 1;
		
		for(i = 2; i < m;i++) {
			if(p[i] == 1) {
				primes.add(i);
				for(j = 2*i; j < m;j+=i) {
					p[j] = 0;
				}
			}
		}
	}// end of generate
	
	
	
}
