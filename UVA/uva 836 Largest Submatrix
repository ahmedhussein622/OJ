import java.awt.Point;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.StringTokenizer;



public class Main {
	
	
	static long a[][] = new long[25][25];
	static long sum[][]  = new long[25][25];
	static int testCases,n;
	
	
	public static void main(String[] args) throws Exception {
		
//		BufferedWriter out = new BufferedWriter(new FileWriter(new File("output.txt")));
		PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));
		
		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
//		BufferedReader in = new BufferedReader(new FileReader("test.txt"));
		
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
		int i,j,k,g,h;
		long maxResult,maxSum,currentSum,f;
		
		testCases = Integer.parseInt(in.readLine());
		String input;
		in.readLine();
		
		boolean first = true;
		
		while(testCases-- != 0) {
			
			input = in.readLine();
			n = input.length();
			for(i = 0; i < n; i++) {
				for(j = 0; j < n; j++) {
					k = input.charAt(j) - '0';
					if(k == 1)
						a[i][j] = 1;
					else
						a[i][j] = -100000;
					sum[i][j] = a[i][j];
					if(i > 0)
						sum[i][j] += sum[i-1][j];
				}
				input = in.readLine();		
			}
			
			maxResult = -Integer.MIN_VALUE;
			
			for(g = 0; g < n; g++) {
				for(h = g; h < n; h++) {
					
					maxSum = -1000;
					currentSum = 0;
					for(i = 0; i < n; i++) {
						f = sum[h][i];
						if(g > 0)
							f -= sum[g-1][i];
						
						currentSum += f;
						if(maxSum < currentSum)
							maxSum = currentSum;
						if(currentSum < 0)
							currentSum = 0;
						
					}
					
					if(maxResult < maxSum)
						maxResult = maxSum;
					
				}
				
			}
			
			if(first)
				first = false;
			else
				out.println();
			if(maxResult < 0)
				out.println(0);
			else
				out.println(maxResult);
		}// end of while
		
		in.close();
		out.flush();
	
	}// end of main
	
	
	
	
	
	
	
	
}// end of class
