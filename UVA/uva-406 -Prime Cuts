
#include<stdio.h>
#include<bitset>
#include<vector>
#include<algorithm>
using namespace std;
bitset<100000> pr;
int m,n,a,b;
long long i,j;
vector<int>primes;
void gen(long long x) {
    pr.set();
    primes.push_back(1);
    primes.push_back(1);
    pr[2] = 1;
    for(i = 2; i < x; i++){
        if(!pr[i])
            continue;
        primes.push_back(i);
        for(j = i*i; j < x; j+= i)
            pr[j] = 0;
    }

}

int main() {

    gen(1100);
    vector<int> ::iterator it;
    while(scanf("%d %d",&m,&n) == 2){

        it = upper_bound(primes.begin(),primes.end(),m);
        i = it - primes.begin()-1;
        j = i/2+i%2;
        if((j%2 == 0 && j < n) ||(j%2 == 1 && j-1 < (n*2-1)/2)){
            a = 1;b = i;
        }
        else if(i%2 == 0){
            a = j+1-n;
            b = j+n;
        }
        else{
            a = j -n+1;
            b = j+n-1;
        }
        printf("%d %d:",m,n);
        for(i = a; i <= b; i++)
            printf(" %d",primes[i]);
        printf("\n\n");
    }

    return 0;
}

